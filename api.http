
### VARIABLES GLOBALES
@baseUrl = http://localhost:3000/api/v2
@json = application/json

### SEEDER (IA made)
POST {{baseUrl}}/seed
Content-Type: {{json}}
### =========================

### ==========================
### USUARIOS
### ==========================
# Crear usuario (OK)
POST {{baseUrl}}/users/register
Content-Type: {{json}}

{
  "email": "leandrito420@example.com",
  "password": "marrawder!",
  "birth_date": "2003-04-20",
  "gender": "male",
  "zipcode": "2800",
  "country_id": 10
}

### Crear usuario (ERROR: falta email)
POST {{baseUrl}}/users/register
Content-Type: {{json}}

{
  "password": "Secr3t0!",
  "birth_date": "1995-05-20"
}


### login
POST {{baseUrl}}/users/login 
Content-Type: application/json

{
  "email": "leandrito420@example.com",
  "password": "marrawder!"
}
### Captura del Token
@token = {{login.response.body.token}}

### Listar users
GET {{baseUrl}}/users?page=1&limit=20
Authorization: Bearer {{token}}

### Obtener usuario por ID
GET {{baseUrl}}/users/2

### Actualizar usuario (cambio de password → actualiza fecha_ult_mod_password)
PUT {{baseUrl}}/users/1
Content-Type: {{json}}

{
  "password": "Nuev4Clave!"
}

### Listar users con password vencida (>90 días)
GET {{baseUrl}}/users/expired-password


### ==========================
### ARTISTAS
### ==========================
# Crear artista
POST {{baseUrl}}/artists
Content-Type: {{json}}

{
  "name": "Masayoshi Takanaka",
  "image": "https://cdn.example.com/breezin.jpg"
}

### Listar artistas
GET {{baseUrl}}/artists


### =======================================================
### ÁLBUMES
### =======================================================

### POST /albums (Crear Álbum)
POST {{baseUrl}}/albums
Content-Type: {{json}}

{
  "title": "The Wall",
  "year": 1979,
  "image": "https://example.com/cover_prog.jpg",
  "id_artist": 1
}

### POST /albums (Prueba de error: Título duplicado)
// Esto debería devolver un 400 si el artista ya tiene ese título.
POST {{baseUrl}}/albums
Content-Type: {{json}}

{
  "title": "The Wall",
  "year": 1979,
  "id_artist": 1
}

### GET /albums (Listar todos los Álbumes)
GET {{baseUrl}}/albums

### GET /albums?q=... (Filtro por Título)
GET {{baseUrl}}/albums?q=wall

### GET /albums?artistaId=X (Filtro por Artista)
GET {{baseUrl}}/albums?artistaId=1

### GET /albums/:id (Obtener Álbum por ID)
// Incluye detalles del Artista y todas las Canciones del álbum.
GET {{baseUrl}}/albums/1

### GET /albums/:id/songs (Obtener SOLO Canciones del Álbum)
GET {{baseUrl}}/albums/1/songs

### PUT /albumes/:id (Actualizar Álbum)
PUT {{baseUrl}}/albums/55
Content-Type: {{json}}

{
  "title": "The Wall - Deluxe Edition",
  "year": 2024 
}

### 6. DELETE /albums/:id (Eliminar Álbum)
DELETE {{baseUrl}}/albums/55


### ==========================
### songs
### ==========================
# Crear canción (OK: duracion en segundos)
POST {{baseUrl}}/songs
Content-Type: {{json}}

{
  "title": "Mariposa Tecknicolor",
  "duration": 255,
  "id_album": 1
}

### Crear canción (ERROR: duracion en mm.ss)
POST {{baseUrl}}/songs
Content-Type: {{json}}

{
  "title": "DuracionMala",
  "duration": 3.25,
  "id_album": 1
}

### Listar songs (filtros)
GET {{baseUrl}}/songs?genres=Jazz&albumId=24

### Asociar género a canción
POST {{baseUrl}}/songs/21/genres
Content-Type: {{json}}

{
  "genreId": 3
}

### Quitar género de canción
DELETE {{baseUrl}}/songs/21/genres/3


### ==========================
### GÉNEROS
### ==========================
# Crear género
POST {{baseUrl}}/generos
Content-Type: {{json}}

{
  "nombre": "Pop"
}

### Listar géneros
GET {{baseUrl}}/generos


### ==========================
### PLAYLISTS
### ==========================
# Crear playlist (activa por defecto)
POST {{baseUrl}}/playlists
Content-Type: {{json}}

{
  "title": "Para correr",
  "id_usuario": 1
}

### Agregar canción a playlist
POST {{baseUrl}}/playlists/1/songs
Content-Type: {{json}}

{
  "id_cancion": 1,
  "orden": 1
}

### Quitar canción de playlist
DELETE {{baseUrl}}/playlists/1/songs/1

### Eliminar (soft-delete) playlist → debe enviar fecha_eliminada
PUT {{baseUrl}}/playlists/1
Content-Type: {{json}}

{
  "estado": "eliminada",
  "fecha_eliminada": "2025-10-02T10:00:00Z"
}

### ERROR: soft-delete sin fecha
PUT {{baseUrl}}/playlists/1
Content-Type: {{json}}

{
  "estado": "eliminada"
}


### ==========================
### SUSCRIPCIONES
### ==========================
# Crear suscripción (fecha_renovacion > fecha_inicio)
POST {{baseUrl}}/suscripciones
Content-Type: {{json}}

{
  "id_usuario": 1,
  "id_tipo_usuario": 1,
  "fecha_inicio": "2025-10-01T00:00:00Z",
  "fecha_renovacion": "2025-11-01T00:00:00Z"
}

### ERROR: fechas inválidas
POST {{baseUrl}}/suscripciones
Content-Type: {{json}}

{
  "id_usuario": 1,
  "id_tipo_usuario": 1,
  "fecha_inicio": "2025-10-01T00:00:00Z",
  "fecha_renovacion": "2025-09-01T00:00:00Z"
}


### ==========================
### MÉTODOS DE PAGO
### ==========================
# Crear método de pago (sin CVC; tarjeta enmascarada por el servidor)
POST {{baseUrl}}/metodos-pago
Content-Type: {{json}}

{
  "id_usuario": 1,
  "tipo_forma_pago": "Tarjeta de crédito",
  "nro_tarjeta": "4519000000001234",
  "mes_caduca": 12,
  "anio_caduca": 2027,
  "banco_codigo": "BANK01"
}

### Listar métodos de pago por usuario
GET {{baseUrl}}/metodos-pago?usuarioId=1


### ==========================
### PAGOS
### ==========================
# Registrar pago (referenciando suscripción y método de pago válidos)
POST {{baseUrl}}/pagos
Content-Type: {{json}}

{
  "id_usuario": 1,
  "id_suscripcion": 1,
  "id_metodo_pago": 1,
  "importe": 100,
  "fecha_pago": "2025-10-01T00:00:00Z"
}

### Listar pagos por usuario y rango
GET {{baseUrl}}/pagos?usuarioId=1&desde=2025-09-01&hasta=2025-12-31


### ==========================
### VISTAS AVANZADAS CON JOINS (EJERCICIOS ADICIONALES)
### ==========================

### EJERCICIO 1: songs populares por país
# Obtener las songs más reproducidas agrupadas por país de users
# Incluye: nombre_cancion, nombre_artista, nombre_album, nombre_pais, total_reproducciones, apariciones_en_playlists
GET {{baseUrl}}/vistas/songs-populares-por-pais

### EJERCICIO 1: Con filtros opcionales (por país específico)
GET {{baseUrl}}/vistas/songs-populares-por-pais?pais=Argentina

### EJERCICIO 1: Con límite de resultados
GET {{baseUrl}}/vistas/songs-populares-por-pais?limit=10

### EJERCICIO 2: Ingresos por artists y discográfica
# Analizar ingresos generados por cada combinación artists-discográfica
# Incluye: nombre_artista, nombre_discografica, nombre_pais_discografica, total_ingresos, cantidad_suscripciones_activas, total_songs, promedio_reproducciones
GET {{baseUrl}}/vistas/ingresos-por-artists-discografica

### EJERCICIO 2: Con filtro por país de discográfica
GET {{baseUrl}}/vistas/ingresos-por-artists-discografica?pais=Argentina

### EJERCICIO 2: Con filtro por monto mínimo de ingresos
GET {{baseUrl}}/vistas/ingresos-por-artists-discografica?minimo_ingresos=50

### EJERCICIO 2: Con ordenamiento por cantidad de suscripciones
GET {{baseUrl}}/vistas/ingresos-por-artists-discografica?orden=suscripciones

### ==========================
### PRUEBAS ADICIONALES PARA VISTAS
### ==========================

### Verificar que las vistas manejen casos sin datos
GET {{baseUrl}}/vistas/songs-populares-por-pais?pais=PaisInexistente

### Verificar rendimiento con parámetros de paginación
GET {{baseUrl}}/vistas/ingresos-por-artists-discografica?page=1&limit=5

### Probar combinación de filtros
GET {{baseUrl}}/vistas/songs-populares-por-pais?pais=Argentina&limit=3&orden=reproducciones
