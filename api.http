
### VARIABLES GLOBALES
@baseUrl = http://localhost:3000/api/v2
@json = application/json

### SEEDER (IA made)
POST {{baseUrl}}/seed
Content-Type: {{json}}
### =========================

### ==========================
### USUARIOS
### ==========================
# Crear usuario (OK)
POST {{baseUrl}}/users/register
Content-Type: {{json}}

{
  "email": "peterpunk@example.com",
  "password": "b0ysdontCry",
  //cta"birth_date": "2003-04-20",
  //cta"gender": "male",
  //cta"zipcode": "777",
  //cta"country_id": 10
  //cta,"pass_updated_at": "2025-7-21"
}

### Crear usuario (ERROR: falta email)
POST {{baseUrl}}/users/register
Content-Type: {{json}}

{
  "password": "Secr3t0!",
  "birth_date": "1995-05-20"
}


### Login
# @name login
POST {{baseUrl}}/users/login 
Content-Type: application/json

{
  "email": "leandrito420@example.com",
  "password": "Nuev4Clave!"
}

### Captura del Token
@token = {{login.response.body.$.token}}

### Listar users
GET {{baseUrl}}/users?page=1&limit=20
Authorization: Bearer {{token}}

### Obtener usuario por ID
GET {{baseUrl}}/users/4
Authorization: Bearer {{token}}

### Actualizar usuario (cambio de password → actualiza fecha_ult_mod_password)
// Si intentas cambiar la contraseña de otro usuario, te devuelve un 403 forbidden.
PUT {{baseUrl}}/users/4
Content-Type: {{json}}
Authorization: Bearer {{token}}

{
  "password": "Nuev4Clave!"
}

### Listar users con password vencida (>90 días)
GET {{baseUrl}}/users/expired-password
Content-Type: {{json}}
Authorization: Bearer {{token}}

### DELETE /api/v2/users/:id (Eliminar Usuario)
DELETE {{baseUrl}}/users/4
Authorization: Bearer {{token}}


### ==========================
### ARTISTAS
### ==========================
# Crear artista
POST {{baseUrl}}/artists
Content-Type: {{json}}

{
  "name": "Masayoshi Takanaka",
  "image": "https://cdn.example.com/breezin.jpg"
}

### Listar artistas
GET {{baseUrl}}/artists

### Artista por ID
GET {{baseUrl}}/artists/4


### =======================================================
### ÁLBUMES
### =======================================================

### POST /albums (Crear Álbum)
POST {{baseUrl}}/albums
Content-Type: {{json}}

{
  "title": "The Wall",
  "year": 1979,
  "image": "https://example.com/cover_prog.jpg",
  "id_artist": 1
}

### POST /albums (Prueba de error: Título duplicado)
// Esto debería devolver un 400 si el artista ya tiene ese título.
POST {{baseUrl}}/albums
Content-Type: {{json}}

{
  "title": "The Wall",
  "year": 1979,
  "id_artist": 1
}

### GET /albums (Listar todos los Álbumes)
GET {{baseUrl}}/albums

### GET /albums?q=... (Filtro por Título)
GET {{baseUrl}}/albums?q=wall

### GET /albums?artistaId=X (Filtro por Artista)
GET {{baseUrl}}/albums?artistaId=1

### GET /albums/:id (Obtener Álbum por ID)
// Incluye detalles del Artista y todas las Canciones del álbum.
GET {{baseUrl}}/albums/1

### GET /albums/:id/songs (Obtener SOLO Canciones del Álbum)
GET {{baseUrl}}/albums/1/songs

### PUT /albumes/:id (Actualizar Álbum)
PUT {{baseUrl}}/albums/55
Content-Type: {{json}}

{
  "title": "The Wall - Deluxe Edition",
  "year": 2024 
}

### 6. DELETE /albums/:id (Eliminar Álbum)
DELETE {{baseUrl}}/albums/55


### ==========================
### CANCIONES
### ==========================
# Crear canción (OK: duracion en segundos)
POST {{baseUrl}}/songs
Content-Type: {{json}}

{
  "title": "Mariposa Tecknicolor",
  "duration": 255,
  "id_album": 1
}

### Crear canción (ERROR: duracion en mm.ss)
POST {{baseUrl}}/songs
Content-Type: {{json}}

{
  "title": "DuracionMala",
  "duration": 3.25,
  "id_album": 1
}

### Listar canciones (filtros)
GET {{baseUrl}}/songs?genres=Jazz&albumId=1

### Listar todas canciones
GET {{baseUrl}}/songs


### Asociar género a canción
POST {{baseUrl}}/songs/21/genres
Content-Type: {{json}}

{
  "genreId": 3
}

### Quitar género de canción
DELETE {{baseUrl}}/songs/21/genres/3


### ==========================
### GÉNEROS
### ==========================
# Crear género
POST {{baseUrl}}/genres
Content-Type: {{json}}

{
  "name": "Pop"
}

### Listar géneros
GET {{baseUrl}}/genres


### ==========================
### PLAYLISTS
### ==========================

### Listar playlists
GET {{baseUrl}}/playlists/


### Crear playlist (activa por defecto)
POST {{baseUrl}}/playlists
Content-Type: {{json}}

{
  "name": "Te abrazo??",
  "user_id": 2
}

### Agregar canción a playlist
POST {{baseUrl}}/playlists/2/songs
Content-Type: {{json}}

{
  "song_id": 2,
  "order_in_playlist": 4
}

### Quitar canción de playlist
DELETE {{baseUrl}}/playlists/1/songs/1

### Eliminar (soft-delete) playlist (la fecha se actualiza automáticamente)
PUT {{baseUrl}}/playlists/1
Content-Type: {{json}}

{
  "is_deleted": false
}



### ==========================
### SUSCRIPCIONES
### ==========================
# Crear suscripción (renewal_date > start_date)
POST {{baseUrl}}/subscriptions
Content-Type: {{json}}

{
  "user_id": 1,
  "type": "PREMIUM",
  "start_date": "2025-10-01T00:00:00Z",
  "renewal_date": "2025-11-01T00:00:00Z"
}

### ERROR: fechas inválidas
POST {{baseUrl}}/subscriptions
Content-Type: {{json}}

{
  "user_id": 1,
  "type": "FREE",
  "start_date": "2025-10-01T00:00:00Z",
  "renewal_date": "2025-09-01T00:00:00Z"
}


### ==========================
### MÉTODOS DE PAGO
### ==========================
### /payment-methods (Crear Método de Pago)
POST {{baseUrl}}/payment-methods
Content-Type: {{json}}

{
  "user_id": 1,
  "type": "VISA",
  "last_four_digits": "4321", 
  "expiration_date": "2028-12-01",
  "is_primary": true,
  "token": "token69420" 
}

### Listar métodos de pago por usuario
GET {{baseUrl}}/payment-methods?userId=1


### ==========================
### PAGOS
### ==========================
# Registrar pago (referenciando suscripción y método de pago válidos)
POST {{baseUrl}}/payments
Content-Type: {{json}}

{
  "user_id": 1,
  "subscription_id": 1,
  "payment_method_id": 1,
  "amount": 100
}

### Listar pagos por usuario y rango
GET {{baseUrl}}/payments?user_id=1&desde=2025-09-01&hasta=2025-12-31


### ==========================
### VISTAS AVANZADAS CON JOINS (EJERCICIOS ADICIONALES)
### ==========================

### EJERCICIO 1: songs populares por país
# Obtener las songs más reproducidas agrupadas por país de users
# Incluye: nombre_cancion, nombre_artista, nombre_album, nombre_pais, total_reproducciones, apariciones_en_playlists
GET {{baseUrl}}/vistas/songs-populares-por-pais

### EJERCICIO 1: Con filtros opcionales (por país específico)
GET {{baseUrl}}/vistas/songs-populares-por-pais?pais=Argentina

### EJERCICIO 1: Con límite de resultados
GET {{baseUrl}}/vistas/songs-populares-por-pais?limit=10

### EJERCICIO 2: Ingresos por artists y discográfica
# Analizar ingresos generados por cada combinación artists-discográfica
# Incluye: nombre_artista, nombre_discografica, nombre_pais_discografica, total_ingresos, cantidad_subscriptions_activas, total_songs, promedio_reproducciones
GET {{baseUrl}}/vistas/ingresos-por-artists-discografica

### EJERCICIO 2: Con filtro por país de discográfica
GET {{baseUrl}}/vistas/ingresos-por-artists-discografica?pais=Argentina

### EJERCICIO 2: Con filtro por monto mínimo de ingresos
GET {{baseUrl}}/vistas/ingresos-por-artists-discografica?minimo_ingresos=50

### EJERCICIO 2: Con order_in_playlistamiento por cantidad de subscriptions
GET {{baseUrl}}/vistas/ingresos-por-artists-discografica?order_in_playlist=subscriptions

### ==========================
### PRUEBAS ADICIONALES PARA VISTAS
### ==========================

### Verificar que las vistas manejen casos sin datos
GET {{baseUrl}}/vistas/songs-populares-por-pais?pais=PaisInexistente

### Verificar rendimiento con parámetros de paginación
GET {{baseUrl}}/vistas/ingresos-por-artists-discografica?page=1&limit=5

### Probar combinación de filtros
GET {{baseUrl}}/vistas/songs-populares-por-pais?pais=Argentina&limit=3&order_in_playlist=reproducciones
